{"version":3,"sources":["components/card-list/card.component.jsx","components/card-list/card-list-component.jsx","components/search-input.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchInput","placeholder","handleChange","type","onChange","App","handleClick3","console","log","state","searchField","fetch","then","response","json","users","setState","this","FilteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAIaA,G,MAAQ,SAAAC,GAAK,OACtB,sBAAKC,UAAY,iBAAjB,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BAClB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCFbC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACND,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLVM,G,MAAc,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACvB,uBAAOZ,UAAU,SAASa,KAAM,SAASF,YAAcA,EAAaG,SAAYF,MC0CrEG,G,wDArCb,aAAc,IAAD,8BACX,gBAYJC,aAAe,kBAAMC,QAAQC,IAAI,qBAV7B,EAAKC,MAAQ,CACXX,SAAU,GACVY,YAAY,IALH,E,2DAUbH,QAAQC,IAAI,oB,0CAKQ,IAAD,OACjBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAU,CAAClB,SAASiB,S,+BAGjC,IAAD,SAE0BE,KAAKR,MAA9BX,EAFD,EAECA,SAAUY,EAFX,EAEWA,YACXQ,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASX,EAAYU,kBAEpG,OACE,sBAAK9B,UAAY,MAAjB,UACA,gDACA,cAAC,EAAD,CAAaW,YAAa,kBAAkBC,aAAc,SAAAoB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WACpG,cAAC,EAAD,CAAU1B,SAAYoB,W,GA/BVO,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.551b6ee2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.style.css\"\r\n\r\nexport const Card =  props => (\r\n    <div className = 'card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set23&size=180x180`}></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\n\r\nimport {Card} from  \"./card.component\"\r\n\r\nimport \"./card-list.style.css\"\r\n\r\nexport const CardList = props => {\r\n    return <div className=\"card-list\">\r\n    {props.monsters.map(monster => (\r\n    <Card key={monster.id} monster={monster} />\r\n    ))}\r\n    </div>;\r\n}","import React from 'react';\r\n\r\nimport \"./search-input.style.css\"\r\n\r\nexport const SearchInput = ({placeholder, handleChange}) => (\r\n    <input className=\"search\" type= \"search\" placeholder= {placeholder} onChange = {handleChange}></input>\r\n) ","import React, {Component} from 'react';\n\nimport {CardList} from './components/card-list/card-list-component';\n\nimport {SearchInput} from './components/search-input.component';\n\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField:\"\",\n    };\n  }\n  \nhandleClick1(){\n  console.log(\"button 1 click\")\n}\n\nhandleClick3 = () => console.log(\"button 3 clicked\")\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json()) \n    .then(users => this.setState ({monsters:users}))  \n  }\n\n  render(){\n    \n    const {monsters, searchField} = this.state;\n    const FilteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className = \"App\">\n      <h1>REACT MONSTERS</h1>\n      <SearchInput placeholder= \"search monsters\" handleChange={e => this.setState({searchField: e.target.value})}/>\n      <CardList monsters = {FilteredMonsters}>\n      </CardList> \n      </div>\n\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}